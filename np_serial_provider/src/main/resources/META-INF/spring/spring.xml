<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd"
       default-lazy-init="true">

	<context:component-scan base-package="com.ipaynow">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>



    <bean id="dataSourceProperties" 	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <value>classpath:datasource.properties</value>
            </list>
        </property>
    </bean>

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${driverClass}" />
        <property name="jdbcUrl" value="${jdbcUrl}" />
        <property name="user" value="${user}" />
        <property name="password" value="${password}" />
        <property name="initialPoolSize" value="20" />			  <!-- 初始大小 -->
        <property name="minPoolSize" value="20" />    			  <!-- 最小连接处 -->
        <property name="maxPoolSize" value="100" />   			  <!-- 连接池中保留的最大连接数 -->
        <property name="maxStatements" value="0" />			  <!-- 数据源内加载的PreparedStatements数量，和checkoutTimeout合用可能会导致死锁 -->
        <property name="maxIdleTime" value="20" /> 			  <!-- 最大空闲时间(秒)。若为0则永不丢弃 -->
        <property name="acquireIncrement" value="5" />			  <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数 -->
        <property name="acquireRetryAttempts" value="10" />		 <!-- 定义在从数据库获取新连接失败后重复尝试的次数 -->
        <property name="idleConnectionTestPeriod" value="60" /> <!-- 每X秒检查所有连接池中的空闲连接 -->
        <property name="testConnectionOnCheckin" value="true" />
        <property name="breakAfterAcquireFailure" value="false" />	<!-- 如果连接无法从数据库中获取一个acquireretryattempts后获得永久关闭 -->
    </bean>


    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="nowPaySqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis.xml" />
    </bean>

    <!-- SqlSessionTemplate保证了使用spring的当前的事务 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="nowPaySqlSessionFactory" />
        <!-- <constructor-arg index="1" value="BATCH" /> -->
    </bean>

    <!-- 自动扫描 mapper 接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ipaynow.serial.dao" />
        <property name="sqlSessionFactoryBeanName" value="nowPaySqlSessionFactory" />
        <!-- 		<property name="sqlSessionTemplate" ref="sqlSession" /> -->
        <property name="sqlSessionTemplateBeanName" value="sqlSession" />

    </bean>

    <bean id="freemarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPaths">
            <list>
                <value>classpath:ftlTemplate</value>
            </list>
        </property>
        <property name="freemarkerSettings">
            <props>
                <prop key="defaultEncoding">UTF-8</prop>
                <prop key="number_format">0.＃＃＃＃＃＃＃＃＃＃</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:Ss</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:Ss</prop>
                <prop key="classic_compatible">true</prop>
            </props>
        </property>
    </bean>



</beans>